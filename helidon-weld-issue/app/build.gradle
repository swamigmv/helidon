/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.1.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}
java.toolchain.languageVersion = JavaLanguageVersion.of(17)

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}
ext {
    helidon_version = '2.4.1'
    log4j_version = '2.17.1'
}
dependencies {
    implementation(enforcedPlatform("io.helidon:helidon-dependencies:${project.helidon_version}"))

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1-jre'

    implementation "io.helidon.config:helidon-config:${project.helidon_version}"
    implementation "io.helidon.microprofile.server:helidon-microprofile-server:${project.helidon_version}"
    runtimeOnly "io.helidon.microprofile.bundles:helidon-microprofile:${project.helidon_version}"
    runtimeOnly "io.helidon.microprofile:helidon-microprofile-cors:${project.helidon_version}"
    //runtimeOnly "io.helidon.integrations.oci:helidon-integrations-oci-objectstorage-health:${project.helidon_version}"
    runtimeOnly "io.helidon.integrations.oci:helidon-integrations-oci-cdi:${project.helidon_version}"
    testRuntimeOnly "io.helidon.microprofile.tests:helidon-microprofile-tests-junit5:${project.helidon_version}"

    runtimeOnly('org.jboss.weld:weld-se:1.0.1-Final') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    implementation group: 'org.jboss.weld', name: 'weld-core-impl', version: '1.0.1-Final'
    implementation group: 'org.jboss.weld', name: 'weld-api', version: '1.0.1-Final'

    implementation 'jakarta.enterprise:jakarta.enterprise.cdi-api:3.0.0'

}


tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

task copyLibs(type: Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/libs'
}


copyLibs.dependsOn jar
assemble.dependsOn copyLibs
jar {
    archiveFileName = project.hasProperty('archiveFileName') ? project.getProperty("archiveFileName") : "${project.name}_${project.version}.jar"
    manifest.attributes 'Main-Class': 'com.helidon.weld.issue.BaseApplication'
    manifest.attributes 'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
}